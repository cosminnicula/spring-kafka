/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package dev.intermediatebox.avro.data;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Sample array */
@org.apache.avro.specific.AvroGenerated
public class Avro06 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4821877726249359944L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Avro06\",\"namespace\":\"dev.intermediatebox.avro.data\",\"doc\":\"Sample array\",\"fields\":[{\"name\":\"emails\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"mandatory array\"},{\"name\":\"numbers\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"doc\":\"mandatory array, with default\",\"default\":[4,98]},{\"name\":\"quotes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"optional array\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Avro06> ENCODER =
      new BinaryMessageEncoder<Avro06>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Avro06> DECODER =
      new BinaryMessageDecoder<Avro06>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Avro06> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Avro06> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Avro06> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Avro06>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Avro06 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Avro06 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Avro06 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Avro06 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** mandatory array */
  private java.util.List<java.lang.CharSequence> emails;
  /** mandatory array, with default */
  private java.util.List<java.lang.Integer> numbers;
  /** optional array */
  private java.util.List<java.lang.CharSequence> quotes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Avro06() {}

  /**
   * All-args constructor.
   * @param emails mandatory array
   * @param numbers mandatory array, with default
   * @param quotes optional array
   */
  public Avro06(java.util.List<java.lang.CharSequence> emails, java.util.List<java.lang.Integer> numbers, java.util.List<java.lang.CharSequence> quotes) {
    this.emails = emails;
    this.numbers = numbers;
    this.quotes = quotes;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return emails;
    case 1: return numbers;
    case 2: return quotes;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: emails = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: numbers = (java.util.List<java.lang.Integer>)value$; break;
    case 2: quotes = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'emails' field.
   * @return mandatory array
   */
  public java.util.List<java.lang.CharSequence> getEmails() {
    return emails;
  }


  /**
   * Sets the value of the 'emails' field.
   * mandatory array
   * @param value the value to set.
   */
  public void setEmails(java.util.List<java.lang.CharSequence> value) {
    this.emails = value;
  }

  /**
   * Gets the value of the 'numbers' field.
   * @return mandatory array, with default
   */
  public java.util.List<java.lang.Integer> getNumbers() {
    return numbers;
  }


  /**
   * Sets the value of the 'numbers' field.
   * mandatory array, with default
   * @param value the value to set.
   */
  public void setNumbers(java.util.List<java.lang.Integer> value) {
    this.numbers = value;
  }

  /**
   * Gets the value of the 'quotes' field.
   * @return optional array
   */
  public java.util.List<java.lang.CharSequence> getQuotes() {
    return quotes;
  }


  /**
   * Sets the value of the 'quotes' field.
   * optional array
   * @param value the value to set.
   */
  public void setQuotes(java.util.List<java.lang.CharSequence> value) {
    this.quotes = value;
  }

  /**
   * Creates a new Avro06 RecordBuilder.
   * @return A new Avro06 RecordBuilder
   */
  public static dev.intermediatebox.avro.data.Avro06.Builder newBuilder() {
    return new dev.intermediatebox.avro.data.Avro06.Builder();
  }

  /**
   * Creates a new Avro06 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Avro06 RecordBuilder
   */
  public static dev.intermediatebox.avro.data.Avro06.Builder newBuilder(dev.intermediatebox.avro.data.Avro06.Builder other) {
    if (other == null) {
      return new dev.intermediatebox.avro.data.Avro06.Builder();
    } else {
      return new dev.intermediatebox.avro.data.Avro06.Builder(other);
    }
  }

  /**
   * Creates a new Avro06 RecordBuilder by copying an existing Avro06 instance.
   * @param other The existing instance to copy.
   * @return A new Avro06 RecordBuilder
   */
  public static dev.intermediatebox.avro.data.Avro06.Builder newBuilder(dev.intermediatebox.avro.data.Avro06 other) {
    if (other == null) {
      return new dev.intermediatebox.avro.data.Avro06.Builder();
    } else {
      return new dev.intermediatebox.avro.data.Avro06.Builder(other);
    }
  }

  /**
   * RecordBuilder for Avro06 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Avro06>
    implements org.apache.avro.data.RecordBuilder<Avro06> {

    /** mandatory array */
    private java.util.List<java.lang.CharSequence> emails;
    /** mandatory array, with default */
    private java.util.List<java.lang.Integer> numbers;
    /** optional array */
    private java.util.List<java.lang.CharSequence> quotes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(dev.intermediatebox.avro.data.Avro06.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.emails)) {
        this.emails = data().deepCopy(fields()[0].schema(), other.emails);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.numbers)) {
        this.numbers = data().deepCopy(fields()[1].schema(), other.numbers);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.quotes)) {
        this.quotes = data().deepCopy(fields()[2].schema(), other.quotes);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing Avro06 instance
     * @param other The existing instance to copy.
     */
    private Builder(dev.intermediatebox.avro.data.Avro06 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.emails)) {
        this.emails = data().deepCopy(fields()[0].schema(), other.emails);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numbers)) {
        this.numbers = data().deepCopy(fields()[1].schema(), other.numbers);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.quotes)) {
        this.quotes = data().deepCopy(fields()[2].schema(), other.quotes);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'emails' field.
      * mandatory array
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getEmails() {
      return emails;
    }


    /**
      * Checks whether the 'emails' field has been set.
      * mandatory array
      * @return True if the 'emails' field has been set, false otherwise.
      */
    public boolean hasEmails() {
      return fieldSetFlags()[0];
    }

    /**
     * Sets the value of the 'emails' field.
     * mandatory array
     * @param value The value of 'emails'.
     * @return This builder.
     */
    public dev.intermediatebox.avro.data.Avro06.Builder setEmails(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.emails = value;
      fieldSetFlags()[0] = true;
      return this;
    }


    /**
      * Clears the value of the 'emails' field.
      * mandatory array
      * @return This builder.
      */
    public dev.intermediatebox.avro.data.Avro06.Builder clearEmails() {
      emails = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'numbers' field.
      * mandatory array, with default
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getNumbers() {
      return numbers;
    }


    /**
      * Sets the value of the 'numbers' field.
      * mandatory array, with default
      * @param value The value of 'numbers'.
      * @return This builder.
      */
    public dev.intermediatebox.avro.data.Avro06.Builder setNumbers(java.util.List<java.lang.Integer> value) {
      validate(fields()[1], value);
      this.numbers = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'numbers' field has been set.
      * mandatory array, with default
      * @return True if the 'numbers' field has been set, false otherwise.
      */
    public boolean hasNumbers() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'numbers' field.
      * mandatory array, with default
      * @return This builder.
      */
    public dev.intermediatebox.avro.data.Avro06.Builder clearNumbers() {
      numbers = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'quotes' field.
      * optional array
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getQuotes() {
      return quotes;
    }


    /**
      * Sets the value of the 'quotes' field.
      * optional array
      * @param value The value of 'quotes'.
      * @return This builder.
      */
    public dev.intermediatebox.avro.data.Avro06.Builder setQuotes(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.quotes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'quotes' field has been set.
      * optional array
      * @return True if the 'quotes' field has been set, false otherwise.
      */
    public boolean hasQuotes() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'quotes' field.
      * optional array
      * @return This builder.
      */
    public dev.intermediatebox.avro.data.Avro06.Builder clearQuotes() {
      quotes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Avro06 build() {
      try {
        Avro06 record = new Avro06();
        record.emails = fieldSetFlags()[0] ? this.emails : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.numbers = fieldSetFlags()[1] ? this.numbers : (java.util.List<java.lang.Integer>) defaultValue(fields()[1]);
        record.quotes = fieldSetFlags()[2] ? this.quotes : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Avro06>
    WRITER$ = (org.apache.avro.io.DatumWriter<Avro06>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Avro06>
    READER$ = (org.apache.avro.io.DatumReader<Avro06>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    long size0 = this.emails.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.emails) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.numbers.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.Integer e1: this.numbers) {
      actualSize1++;
      out.startItem();
      out.writeInt(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    if (this.quotes == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size2 = this.quotes.size();
      out.writeArrayStart();
      out.setItemCount(size2);
      long actualSize2 = 0;
      for (java.lang.CharSequence e2: this.quotes) {
        actualSize2++;
        out.startItem();
        out.writeString(e2);
      }
      out.writeArrayEnd();
      if (actualSize2 != size2)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.emails;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("emails").schema());
        this.emails = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<java.lang.Integer> a1 = this.numbers;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.Integer>((int)size1, SCHEMA$.getField("numbers").schema());
        this.numbers = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.Integer> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.Integer e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readInt();
          a1.add(e1);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.quotes = null;
      } else {
        long size2 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a2 = this.quotes;
        if (a2 == null) {
          a2 = new SpecificData.Array<java.lang.CharSequence>((int)size2, SCHEMA$.getField("quotes").schema().getTypes().get(1));
          this.quotes = a2;
        } else a2.clear();
        SpecificData.Array<java.lang.CharSequence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a2 : null);
        for ( ; 0 < size2; size2 = in.arrayNext()) {
          for ( ; size2 != 0; size2--) {
            java.lang.CharSequence e2 = (ga2 != null ? ga2.peek() : null);
            e2 = in.readString(e2 instanceof Utf8 ? (Utf8)e2 : null);
            a2.add(e2);
          }
        }
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.emails;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("emails").schema());
            this.emails = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 1:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.Integer> a1 = this.numbers;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.Integer>((int)size1, SCHEMA$.getField("numbers").schema());
            this.numbers = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.Integer> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.Integer e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readInt();
              a1.add(e1);
            }
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.quotes = null;
          } else {
            long size2 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a2 = this.quotes;
            if (a2 == null) {
              a2 = new SpecificData.Array<java.lang.CharSequence>((int)size2, SCHEMA$.getField("quotes").schema().getTypes().get(1));
              this.quotes = a2;
            } else a2.clear();
            SpecificData.Array<java.lang.CharSequence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a2 : null);
            for ( ; 0 < size2; size2 = in.arrayNext()) {
              for ( ; size2 != 0; size2--) {
                java.lang.CharSequence e2 = (ga2 != null ? ga2.peek() : null);
                e2 = in.readString(e2 instanceof Utf8 ? (Utf8)e2 : null);
                a2.add(e2);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










